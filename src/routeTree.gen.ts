/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TodoIndexRouteImport } from './routes/todo/index'
import { Route as TimeinvestIndexRouteImport } from './routes/timeinvest/index'
import { Route as SpeechIndexRouteImport } from './routes/speech/index'
import { Route as MatrixIndexRouteImport } from './routes/matrix/index'
import { Route as ExcelIndexRouteImport } from './routes/excel/index'
import { Route as CalendarIndexRouteImport } from './routes/calendar/index'
import { Route as TodoWidgetRouteImport } from './routes/todo/widget'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodoIndexRoute = TodoIndexRouteImport.update({
  id: '/todo/',
  path: '/todo/',
  getParentRoute: () => rootRouteImport,
} as any)
const TimeinvestIndexRoute = TimeinvestIndexRouteImport.update({
  id: '/timeinvest/',
  path: '/timeinvest/',
  getParentRoute: () => rootRouteImport,
} as any)
const SpeechIndexRoute = SpeechIndexRouteImport.update({
  id: '/speech/',
  path: '/speech/',
  getParentRoute: () => rootRouteImport,
} as any)
const MatrixIndexRoute = MatrixIndexRouteImport.update({
  id: '/matrix/',
  path: '/matrix/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExcelIndexRoute = ExcelIndexRouteImport.update({
  id: '/excel/',
  path: '/excel/',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarIndexRoute = CalendarIndexRouteImport.update({
  id: '/calendar/',
  path: '/calendar/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodoWidgetRoute = TodoWidgetRouteImport.update({
  id: '/todo/widget',
  path: '/todo/widget',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/todo/widget': typeof TodoWidgetRoute
  '/calendar': typeof CalendarIndexRoute
  '/excel': typeof ExcelIndexRoute
  '/matrix': typeof MatrixIndexRoute
  '/speech': typeof SpeechIndexRoute
  '/timeinvest': typeof TimeinvestIndexRoute
  '/todo': typeof TodoIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/todo/widget': typeof TodoWidgetRoute
  '/calendar': typeof CalendarIndexRoute
  '/excel': typeof ExcelIndexRoute
  '/matrix': typeof MatrixIndexRoute
  '/speech': typeof SpeechIndexRoute
  '/timeinvest': typeof TimeinvestIndexRoute
  '/todo': typeof TodoIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/todo/widget': typeof TodoWidgetRoute
  '/calendar/': typeof CalendarIndexRoute
  '/excel/': typeof ExcelIndexRoute
  '/matrix/': typeof MatrixIndexRoute
  '/speech/': typeof SpeechIndexRoute
  '/timeinvest/': typeof TimeinvestIndexRoute
  '/todo/': typeof TodoIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/todo/widget'
    | '/calendar'
    | '/excel'
    | '/matrix'
    | '/speech'
    | '/timeinvest'
    | '/todo'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/todo/widget'
    | '/calendar'
    | '/excel'
    | '/matrix'
    | '/speech'
    | '/timeinvest'
    | '/todo'
  id:
    | '__root__'
    | '/'
    | '/todo/widget'
    | '/calendar/'
    | '/excel/'
    | '/matrix/'
    | '/speech/'
    | '/timeinvest/'
    | '/todo/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TodoWidgetRoute: typeof TodoWidgetRoute
  CalendarIndexRoute: typeof CalendarIndexRoute
  ExcelIndexRoute: typeof ExcelIndexRoute
  MatrixIndexRoute: typeof MatrixIndexRoute
  SpeechIndexRoute: typeof SpeechIndexRoute
  TimeinvestIndexRoute: typeof TimeinvestIndexRoute
  TodoIndexRoute: typeof TodoIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todo/': {
      id: '/todo/'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timeinvest/': {
      id: '/timeinvest/'
      path: '/timeinvest'
      fullPath: '/timeinvest'
      preLoaderRoute: typeof TimeinvestIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/speech/': {
      id: '/speech/'
      path: '/speech'
      fullPath: '/speech'
      preLoaderRoute: typeof SpeechIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/matrix/': {
      id: '/matrix/'
      path: '/matrix'
      fullPath: '/matrix'
      preLoaderRoute: typeof MatrixIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/excel/': {
      id: '/excel/'
      path: '/excel'
      fullPath: '/excel'
      preLoaderRoute: typeof ExcelIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar/': {
      id: '/calendar/'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todo/widget': {
      id: '/todo/widget'
      path: '/todo/widget'
      fullPath: '/todo/widget'
      preLoaderRoute: typeof TodoWidgetRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TodoWidgetRoute: TodoWidgetRoute,
  CalendarIndexRoute: CalendarIndexRoute,
  ExcelIndexRoute: ExcelIndexRoute,
  MatrixIndexRoute: MatrixIndexRoute,
  SpeechIndexRoute: SpeechIndexRoute,
  TimeinvestIndexRoute: TimeinvestIndexRoute,
  TodoIndexRoute: TodoIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
