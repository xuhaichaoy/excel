/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TodoIndexRouteImport } from './routes/todo/index'
import { Route as TodoWidgetRouteImport } from './routes/todo/widget'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodoIndexRoute = TodoIndexRouteImport.update({
  id: '/todo/',
  path: '/todo/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodoWidgetRoute = TodoWidgetRouteImport.update({
  id: '/todo/widget',
  path: '/todo/widget',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/todo/widget': typeof TodoWidgetRoute
  '/todo': typeof TodoIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/todo/widget': typeof TodoWidgetRoute
  '/todo': typeof TodoIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/todo/widget': typeof TodoWidgetRoute
  '/todo/': typeof TodoIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/todo/widget' | '/todo'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/todo/widget' | '/todo'
  id: '__root__' | '/' | '/todo/widget' | '/todo/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TodoWidgetRoute: typeof TodoWidgetRoute
  TodoIndexRoute: typeof TodoIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todo/': {
      id: '/todo/'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todo/widget': {
      id: '/todo/widget'
      path: '/todo/widget'
      fullPath: '/todo/widget'
      preLoaderRoute: typeof TodoWidgetRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TodoWidgetRoute: TodoWidgetRoute,
  TodoIndexRoute: TodoIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
